class Solution:
    def maxFreeTime(self, eventTime: int, startTime: List[int], endTime: List[int]) -> int:
        # startTime = [0,7,9]
        # endTime = [1,8,10]
        # eventTime = 10
        n = len(startTime)
        gap = [0]*(n+1)
        # n = len(startTime)
        gap[0] = startTime[0] - 0
        gap[n] = eventTime - endTime[n-1] 
        for i in range(1,len(startTime)):
            gap[i] = startTime[i] - endTime[i-1]
        # print(gap) 
        prefix = [0]
        prev = 0
        for i in range(len(gap)-2):
            prev = max(prev,gap[i])
            prefix.append(prev)
        # print(prefix)
        prev = 0
        suffix = [0]
        for i in range(len(gap)-1,1,-1):
            prev = max(prev,gap[i])
            suffix.append(prev)
        suffix.reverse()
        # print(suffix)
        l = 0
        r = l+1
        maxi = 0
        for i in range(len(startTime)):
            sum = gap[l] + gap[r]
            # print(sum,"sum")
            length = endTime[i] - startTime[i]
            if length <= prefix[i]:
                sum = sum + length
            elif length <= suffix[i]:
                sum = sum + length
            maxi = max(maxi,sum)
            l+=1
            r+=1
        return (maxi)
