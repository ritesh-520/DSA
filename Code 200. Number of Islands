class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        vis = [["0"]*(len(grid[0])) for _ in range(len(grid))]
        def dfs(i,j):
            if i < 0 or j <0 or i >= len(grid) or j >= len(grid[0]) or vis[i][j] == "1" or grid[i][j] == "0":
                return 
            vis[i][j] = "1"
            # print(vis)
            nei = [[1,0],[-1,0],[0,1],[0,-1]]
            for row,col in nei:
                dfs(row+i,col+j)
        count = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == "1" and vis[i][j] == "0":
                    count = count +1
                    dfs(i,j)
                    # print("k")
        # print(vis)
        return count
